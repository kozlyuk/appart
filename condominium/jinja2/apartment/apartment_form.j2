{% extends "main.j2" %}

{% block title %}
{{ _('Apartment create') }}
{% endblock title %}

{% block content %}
<div class="container">
    <div class="row clearfix">
        <div class="col-lg-12 col-md-12">
            <div class="card">
                <div class="header mt-2">
                    <h2 class="text-center">{{ header }}</h2>
                </div>
                <div class="body">
                    <form action="" method="post" enctype="multipart/form-data">
                        {{ csrf_input }}
                        {% for field in form %}
                            {% if field.errors %}
                            <div class="alert alert-danger-2" role="alert">
                                {{ field.errors }}
                            </div>
                            {% endif %}
                            <div class="input-group mb-3">
                                {% if field.field.widget.input_type == 'file' %}
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">Upload house logo</span>
                                    </div>
                                    <div class="custom-file">
                                        {{field}}
                                        <label class="custom-file-label" for="id_logo">Choose file</label>
                                    </div>
                                {% else %}
                                    {% if field.is_hidden != True %}
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">{{ field.label }}</span>
                                        </div>
                                    {% else %}
                                    {% endif %}
                                        {{field}}
                                {% endif %}
                            </div>
                        {% endfor %}
                        <div class="btn-toolbar justify-content-between mt-2">
                            <button type="button" onclick="window.location.href = '{{url('condominium_Apartment_list')}}'" class="btn btn-info">{{ _('Back to list') }}</button>
                            {# <button type="button" onclick="openModal()"  class="btn btn-warning" data-toggle="modal" data-target="#residentModal">{{ _('Resident management') }}</button> #}
                            <button type="submit" class="btn btn-success">{{ text_submit }}</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-lg-12 col-md-12">
            <div class="card">
                <div class="card-body">
                    <div class="app">
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text">{{ _('Input phone number') }}</span>
                            </div>
                            <input type="text" name="" id="searchByNumber" class="form-control">
                            <button id="trigger" class="btn btn-success">{{ _('Check resident') }}</button>
                        </div>
                        <div id="app-wrapper" class="input-group"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Load React. -->
<!-- Note: when deploying, replace "development.js" with "production.min.js". -->
<script src="https://unpkg.com/react@16/umd/react.development.js" crossorigin></script>
<script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js" crossorigin></script>
<script src="https://unpkg.com/react-transition-group/dist/react-transition-group.js" crossorigin></script>

<script type="module">
import {
    Ajax,
    Cookie,
    nullCheck
} from '{{ static("components/components.js")}}'

const pk = {{apartment.pk}};
let trigger = document.querySelector("#trigger");
let wrapper = document.querySelector("#app-wrapper");
let searchInput = document.querySelector("#searchByNumber");
let outputPkInput = document.querySelector("#id_resident");
let e = React.createElement;
let rootElement =
    e('div', { className:"col pl-0 pr-0" },
        e('div', { id:"appOutput" }))
ReactDOM.render(rootElement, wrapper)

class Error extends React.Component {
    render() {
        return e('span', { className: 'mt-4 badge badge-danger' }, this.props.message, this.props.child)
    }
}

trigger.addEventListener("click", () => {
    if (searchInput.value == "") {
        toastr["error"]('{{ _("Please fill phone field") }}')
    }
    let url = '/api/v1/user/get_by_number/' + searchInput.value;
    let request = new Ajax(wrapper);
    let responce = request.get(url).then(
        response => {
            let user = JSON.parse(response);
            let userPk = user.pk;
            if (user[0] == undefined) {
                let createForm = e('form', { name: 'addResident' },
                e('input', { type: 'hidden', id: 'csrfmiddlewaretoken', name: 'csrfmiddlewaretoken', value: '{{ csrf_token }}' }),
                    e('div', { className: 'input-group mb-3' },
                        e('div', { className: 'input-group-prepend' },
                            e('span', { className: 'input-group-text' }, '{{ _("First name") }}'),
                        ),
                        e('input', { type: 'text', id: 'first_name', name: 'first_name', className: 'form-control', defaultValue: nullCheck(user.first_name) }),
                    ),
                    e('div', { className: 'input-group mb-3' },
                        e('div', { className: 'input-group-prepend' },
                            e('span', { className: 'input-group-text' }, '{{ _("Last name") }}'),
                        ),
                        e('input', { type: 'text', id: 'last_name', name: 'last_name', className: 'form-control', defaultValue: nullCheck(user.last_name) }),
                    ),
                    e('div', { className: 'input-group mb-3' },
                        e('div', { className: 'input-group-prepend' },
                            e('span', { className: 'input-group-text' }, '{{ _("Mobile number") }}'),
                        ),
                        e('input', { type: 'text', id: 'mobile_number', readOnly: true, name: 'mobile_number', defaultValue: searchInput.value, className: 'form-control' }),
                    ),
                    e('div', { className: 'input-group mb-3' },
                        e('div', { className: 'input-group-prepend' },
                            e('span', { className: 'input-group-text' }, '{{ _("Email") }}'),
                        ),
                        e('input', { type: 'text', id: 'email', name: 'email', className: 'form-control', defaultValue: nullCheck(user.email) }),
                    ),
                    e('div', { className: 'input-group bm-3' },
                        e('button', { type: 'button', id: 'addResident', className: 'btn btn-warning ml-auto mr-auto' }, '{{ _("Add resident") }}')
                    )
                )

                ReactDOM.render(createForm, document.getElementById('appOutput'))
                const addResidentTrigger = document.getElementById('addResident');
                addResidentTrigger.addEventListener("click", () => {
                    let createUrl = '/api/v1/user/' + userPk + '/';
                    const cookie = new Cookie();
                    //PUT params
                    let postParams = JSON.stringify({
                        csrftoken: cookie.get('csrftoken'),
                        first_name: document.getElementById('first_name').value,
                        last_name: document.getElementById('last_name').value,
                        mobile_number: document.getElementById('mobile_number').value,
                        email: document.getElementById('email').value,
                    });
                    //console.log('postParams')
                    let csrf = cookie.get('csrftoken');
                    //console.log(csrf)
                    request.put(createUrl, postParams, csrf);
                    outputPkInput.value = userPk;
                    toastr["success"]('{{ _("You have added a resident") }}')
                })
            } else {
            class Wrapper extends React.Component {
                render() {
                    return e('span', { className: 'mt-4' }, this.props.child, this.props.message);
                }
            };

            ReactDOM.render(
                e(Wrapper, { message: '{{ _("Email: ")}}' + user[0].email, child: e('span', { className:"badge badge-success" }, '{{ _("User find") }}') },
                ),
                document.getElementById("appOutput")
            )
            };
        },
        error => {
            toastr["error"](error)
            //console.log(`Rejected: ${error}`)
            })
});

</script>

{% endblock content %}